{"version":3,"sources":["../../lib/ramzor.js","Machines.js","services/unsplash.js","machines/gallery.js","machines/search.js","App.js","reportWebVitals.js","index.js"],"names":["events","Object","freeze","TRANSITION","mapStates","config","keys","reduce","states","key","state","name","actions","enter","leave","is","pattern","next","values","transition","action","value","machine","trail","active","current","push","emit","from","to","console","error","module","exports","Ramzor","initial","length","listeners","send","on","event","cb","off","message","forEach","f","useMachine","m","useState","setCurrent","useEffect","Page","username","page","size","a","old","fetch","response","status","total","headers","get","json","command","data","photos","concat","Gallery","waiting","LOAD","loading","NOT_FOUND","ERROR","SUCCESS","prev","loadingMore","feed","LOAD_MORE","notFound","Search","typing","TYPE","App","load","sInput","type","disableForm","input","text","className","Navbar","bg","variant","Brand","icon","Form","inline","onSubmit","e","preventDefault","Control","placeholder","disabled","onInput","currentTarget","Button","onClick","Container","fluid","Jumbotron","map","p","src","urls","small","style","width","alt","description","Math","floor","random","spin","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","faSpinner","faBinoculars","faBullseye","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd783dba.chunk.js","sourcesContent":["const events = Object.freeze({\n    TRANSITION: 'transition'\n});\n\nconst Ramzor = (config) => {\n    const { initial } = config;\n    const states = mapStates(config.states);\n    if (!initial || !states || !Object.keys(states).length || !states[initial]) {\n        return;\n    }\n    const listeners = {};\n    const trail = [states[config.initial].name];\n    const machine = Object.freeze({\n        initial,\n        states,\n        current: () => ({ ...states[trail[trail.length - 1]] }),\n        send: (action, value) => transition(action, value, machine, trail),\n        // Todo check if it's function\n        on: (event, cb) => (listeners[event] && listeners[event].push(cb) || (listeners[event] = [cb])),\n        off: (event) => (listeners[event] = []),\n        emit: (event, message) => (listeners[event] && listeners[event].forEach(f => f(message))),\n    });\n    states[initial].enter && states[initial].enter(null, machine);\n    return machine;\n}\n\nconst mapStates = (config) => {\n    if (!config) {\n        return {};\n    }\n    const keys = config && Object.keys(config);\n    return Object.freeze(keys.reduce((states, key) => {\n        states[key] = state(key, config[key]);\n        return states;\n    }, {}));\n}\n\nconst state = (name, config) => {\n    // This object should be immutable and check\n    // TBD implement better data flow and avoid value changing\n    const { actions = {}, enter, leave } = config;\n    return {\n        actions,\n        enter,\n        leave,\n        name,\n        is: (pattern) => (pattern && pattern === name),\n        next: Object.values(actions)\n    };\n}\n\nconst transition = (action, value, machine, trail) => {\n    const active = machine.current();\n    const name = active.actions && active.actions[action];\n    const next = name && machine.states && machine.states[name];\n    if (!next) {\n        console.error(`Can't find state named ${name} for action ${action}. available states: `, Object.keys(machine.states));\n        return;\n    }\n    trail.push(next.name);\n    next.value = { ...value };\n    active.leave && active.leave(next, machine);\n    next.enter && next.enter(active, machine);\n    machine.emit(events.TRANSITION, { from: { ...active }, to: { ...next } });\n}\n\nmodule.exports = { Ramzor, events };","import { useEffect, useState } from \"react\";\n\nconst useMachine = (m) => {\n    const [current, setCurrent] = useState(m.current);\n    useEffect(() => {\n        m.on('transition', (event) => {\n            setCurrent(event.to)\n        });\n    }, [m]);\n    return [current, m.send];\n}\n\nexport { useMachine };\n","const Page = async (username, page, size, old = []) => {\n    try {\n        const response = await fetch(`https://api.unsplash.com/users/${username}/photos?per_page=${size}&page=${page}&client_id=22ae3a3fb9415b82a2f8da77b560210d4aac32adc0a3fe12dc5b4e2b85ebc384`);\n        const status = response.status;\n        const total = response.headers.get('X-Total');\n        const json = await response.json();\n        if (status === 404) {\n            return { command: 'NOT_FOUND', data: { username } };\n        } else if (status === 200) {\n            return { command: 'SUCCESS', data: { username, photos: old.concat(json), page, total } };\n        }\n    } catch (error) {\n        return { command: 'ERROR', data: { ...error } };\n    }\n}\n\nexport { Page }","import { Ramzor } from 'ramzor';\nimport { Page } from '../services/unsplash';\n\nconst Gallery = Ramzor({\n    initial: 'waiting',\n    states: {\n        waiting: {\n            actions: {\n                LOAD: 'loading',\n            }\n        },\n        loading: {\n            actions: {\n                NOT_FOUND: 'notFound',\n                ERROR: 'error',\n                SUCCESS: 'feed'\n            },\n            enter: async (prev, machine) => {\n                const response = await Page(machine.current().value.username, 1, 20);\n                machine.send(response.command, response.data);\n            }\n        },\n        loadingMore: {\n            actions: {\n                NOT_FOUND: 'notFound',\n                ERROR: 'error',\n                SUCCESS: 'feed'\n            },\n            enter: async (prev, machine) => {\n                const { username, page, photos } = machine.current().value;\n                const response = await Page(username, page + 1, 20, photos);\n                machine.send(response.command, response.data);\n            }\n        },\n        feed: {\n            actions: {\n                LOAD: 'loading',\n                LOAD_MORE: 'loadingMore'\n            }\n        },\n        notFound: {\n            actions: {\n                LOAD: 'loading'\n            }\n        }\n    }\n});\n\nexport default Gallery;","import { Ramzor } from 'ramzor';\n\nconst Search = Ramzor({\n    initial: 'typing',\n    states: {\n        typing: {\n            actions: {\n                TYPE: 'typing',\n            }\n        }\n    }\n});\n\nexport default Search;\n","import React from 'react';\nimport './App.scss';\nimport { useMachine } from './Machines';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Gallery from './machines/gallery';\nimport Search from './machines/search';\n\n\nconst App = () => {\n\n  const [feed, load] = useMachine(Gallery);\n  const [sInput, type] = useMachine(Search);\n\n  const disableForm = (input) => (!input.value || !input.value.text || !input.value.text.length);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"justify-content-between\">\n        <Navbar.Brand>\n          <FontAwesomeIcon icon=\"binoculars\" /> Sherlock\n        </Navbar.Brand>\n        <Form inline onSubmit={(e) => { e.preventDefault(); !disableForm(sInput) && load('LOAD', { username: sInput.value.text }); }}>\n          <Form.Control placeholder=\"Unsplash Username\"\n            disabled={feed.is('loading') || feed.is('loadingMore')}\n            value={(sInput.value && sInput.value.text) || ''}\n            onInput={(e) => (type('TYPE', { text: e.currentTarget.value }))}\n          />\n          <Button disabled={disableForm(sInput)}\n            onClick={() => (load('LOAD', { username: sInput.value.text }))} variant=\"dark\">\n            <FontAwesomeIcon icon=\"bullseye\" /> Load\n            </Button>\n        </Form>\n      </Navbar>\n      <Container fluid=\"xl\" className=\"mt-3\">\n        {feed && feed.is('waiting') &&\n          <Jumbotron>\n            <h1>Start use Sherlock</h1>\n            <p>By enter your Unsplash username in navbar</p>\n          </Jumbotron>\n        }\n        {feed && feed.is('feed') && feed.value.photos.length === 0 &&\n          <Jumbotron>\n            <h1>No images found for user {feed.value.username}</h1>\n          </Jumbotron>\n        }\n        {feed && (feed.is('feed') || feed.is('loadingMore')) && feed.value.photos.length > 0 &&\n          <Container>\n            <div className=\"masonry\">\n              {feed.value.photos.map((p) => (\n                <div className=\"brick photo-pile\">\n                  <img src={p.urls.small} style={{ width: '100%' }} alt={p.description} />\n                  <div className=\"placeholder p-2\">\n                    <span className=\"duplicates\">\n                      <span className=\"number\">{Math.floor(Math.random() * (1000 - 0 + 1)) + 0}</span>\n                      Occurrences found\n                    </span>\n                    <Button variant=\"outline-light\">Learn More</Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n            {feed.value.total > feed.value.photos.length &&\n              <p className=\"text-center\">\n                <Button disabled={feed.is('loadingMore')} variant=\"outline-dark\" onClick={() => (load('LOAD_MORE', { ...feed.value }))}>\n                  {feed.is('feed') && 'Load More'}\n                  {feed.is('loadingMore') && <FontAwesomeIcon icon=\"spinner\" spin />}\n                </Button>\n              </p>\n            }\n          </Container>\n        }\n        {feed && feed.is('loading') &&\n          <p className=\"text-center\">\n            <FontAwesomeIcon icon=\"spinner\" spin size=\"10x\" />\n          </p>\n        }\n        {feed && feed.is('notFound') &&\n          <Jumbotron>\n            <h1>User {feed.value.username} not found</h1>\n            <p>Try search for something else</p>\n          </Jumbotron>\n        }\n        {feed && feed.is('error') && feed.value.error &&\n          <Jumbotron>\n            <p>{JSON.stringify(feed.value.error)}</p>\n          </Jumbotron>\n        }\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpinner, faBinoculars, faBullseye } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faSpinner, faBinoculars, faBullseye);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}